package com.travelport.service.air_v18_0;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.6.0
 * 2012-04-23T10:42:57.015+02:00
 * Generated source version: 2.6.0
 * 
 */
@WebServiceClient(name = "AirService", 
                  wsdlLocation = "http://localhost:8080/kestrel/AirService?wsdl",
                  targetNamespace = "http://www.travelport.com/service/air_v18_0") 
public class AirService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.travelport.com/service/air_v18_0", "AirService");
    public final static QName AirFareRulesPort = new QName("http://www.travelport.com/service/air_v18_0", "AirFareRulesPort");
    public final static QName AirFareDisplayPort = new QName("http://www.travelport.com/service/air_v18_0", "AirFareDisplayPort");
    public final static QName AirRepriceSearchPort = new QName("http://www.travelport.com/service/air_v18_0", "AirRepriceSearchPort");
    public final static QName AirVoidTicketPort = new QName("http://www.travelport.com/service/air_v18_0", "AirVoidTicketPort");
    public final static QName SeatMapPort = new QName("http://www.travelport.com/service/air_v18_0", "SeatMapPort");
    public final static QName AirRefundTicketPort = new QName("http://www.travelport.com/service/air_v18_0", "AirRefundTicketPort");
    public final static QName AirExchangeProcessPort = new QName("http://www.travelport.com/service/air_v18_0", "AirExchangeProcessPort");
    public final static QName AirScheduleSearchPort = new QName("http://www.travelport.com/service/air_v18_0", "AirScheduleSearchPort");
    public final static QName AirRetrieveDocumentBindingPort = new QName("http://www.travelport.com/service/air_v18_0", "AirRetrieveDocumentBindingPort");
    public final static QName FlightTimeTablePort = new QName("http://www.travelport.com/service/air_v18_0", "FlightTimeTablePort");
    public final static QName AirMerchandisingOfferAvailabilityPort = new QName("http://www.travelport.com/service/air_v18_0", "AirMerchandisingOfferAvailabilityPort");
    public final static QName AirLowFareSearchAsynchPort = new QName("http://www.travelport.com/service/air_v18_0", "AirLowFareSearchAsynchPort");
    public final static QName AirUpsellSearchPort = new QName("http://www.travelport.com/service/air_v18_0", "AirUpsellSearchPort");
    public final static QName AirCreateReservationPort = new QName("http://www.travelport.com/service/air_v18_0", "AirCreateReservationPort");
    public final static QName AirCancelPort = new QName("http://www.travelport.com/service/air_v18_0", "AirCancelPort");
    public final static QName AirAvailabilitySearchPort = new QName("http://www.travelport.com/service/air_v18_0", "AirAvailabilitySearchPort");
    public final static QName AirExchangeQuotePort = new QName("http://www.travelport.com/service/air_v18_0", "AirExchangeQuotePort");
    public final static QName AirRefundQuotePort = new QName("http://www.travelport.com/service/air_v18_0", "AirRefundQuotePort");
    public final static QName AirTicketingPort = new QName("http://www.travelport.com/service/air_v18_0", "AirTicketingPort");
    public final static QName AirPrePayPort = new QName("http://www.travelport.com/service/air_v18_0", "AirPrePayPort");
    public final static QName AirMerchandisingFulfillmentPort = new QName("http://www.travelport.com/service/air_v18_0", "AirMerchandisingFulfillmentPort");
    public final static QName AirPricePort = new QName("http://www.travelport.com/service/air_v18_0", "AirPricePort");
    public final static QName AirExchangeTicketingPort = new QName("http://www.travelport.com/service/air_v18_0", "AirExchangeTicketingPort");
    public final static QName AirRetrieveLowFareSearchPort = new QName("http://www.travelport.com/service/air_v18_0", "AirRetrieveLowFareSearchPort");
    public final static QName AirLowFareSearchPort = new QName("http://www.travelport.com/service/air_v18_0", "AirLowFareSearchPort");
    static {
        URL url = null;
        try {
            url = new URL("http://localhost:8080/kestrel/AirService?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(AirService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://localhost:8080/kestrel/AirService?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public AirService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public AirService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AirService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns AirFareRulesPortType
     */
    @WebEndpoint(name = "AirFareRulesPort")
    public AirFareRulesPortType getAirFareRulesPort() {
        return super.getPort(AirFareRulesPort, AirFareRulesPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirFareRulesPortType
     */
    @WebEndpoint(name = "AirFareRulesPort")
    public AirFareRulesPortType getAirFareRulesPort(WebServiceFeature... features) {
        return super.getPort(AirFareRulesPort, AirFareRulesPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AirFareDisplayPortType
     */
    @WebEndpoint(name = "AirFareDisplayPort")
    public AirFareDisplayPortType getAirFareDisplayPort() {
        return super.getPort(AirFareDisplayPort, AirFareDisplayPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirFareDisplayPortType
     */
    @WebEndpoint(name = "AirFareDisplayPort")
    public AirFareDisplayPortType getAirFareDisplayPort(WebServiceFeature... features) {
        return super.getPort(AirFareDisplayPort, AirFareDisplayPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AirRepriceSearchPortType
     */
    @WebEndpoint(name = "AirRepriceSearchPort")
    public AirRepriceSearchPortType getAirRepriceSearchPort() {
        return super.getPort(AirRepriceSearchPort, AirRepriceSearchPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirRepriceSearchPortType
     */
    @WebEndpoint(name = "AirRepriceSearchPort")
    public AirRepriceSearchPortType getAirRepriceSearchPort(WebServiceFeature... features) {
        return super.getPort(AirRepriceSearchPort, AirRepriceSearchPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AirVoidTicketPortType
     */
    @WebEndpoint(name = "AirVoidTicketPort")
    public AirVoidTicketPortType getAirVoidTicketPort() {
        return super.getPort(AirVoidTicketPort, AirVoidTicketPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirVoidTicketPortType
     */
    @WebEndpoint(name = "AirVoidTicketPort")
    public AirVoidTicketPortType getAirVoidTicketPort(WebServiceFeature... features) {
        return super.getPort(AirVoidTicketPort, AirVoidTicketPortType.class, features);
    }
    /**
     *
     * @return
     *     returns SeatMapPortType
     */
    @WebEndpoint(name = "SeatMapPort")
    public SeatMapPortType getSeatMapPort() {
        return super.getPort(SeatMapPort, SeatMapPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SeatMapPortType
     */
    @WebEndpoint(name = "SeatMapPort")
    public SeatMapPortType getSeatMapPort(WebServiceFeature... features) {
        return super.getPort(SeatMapPort, SeatMapPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AirRefundTicketPortType
     */
    @WebEndpoint(name = "AirRefundTicketPort")
    public AirRefundTicketPortType getAirRefundTicketPort() {
        return super.getPort(AirRefundTicketPort, AirRefundTicketPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirRefundTicketPortType
     */
    @WebEndpoint(name = "AirRefundTicketPort")
    public AirRefundTicketPortType getAirRefundTicketPort(WebServiceFeature... features) {
        return super.getPort(AirRefundTicketPort, AirRefundTicketPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AirExchangeProcessPortType
     */
    @WebEndpoint(name = "AirExchangeProcessPort")
    public AirExchangeProcessPortType getAirExchangeProcessPort() {
        return super.getPort(AirExchangeProcessPort, AirExchangeProcessPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirExchangeProcessPortType
     */
    @WebEndpoint(name = "AirExchangeProcessPort")
    public AirExchangeProcessPortType getAirExchangeProcessPort(WebServiceFeature... features) {
        return super.getPort(AirExchangeProcessPort, AirExchangeProcessPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AirScheduleSearchPortType
     */
    @WebEndpoint(name = "AirScheduleSearchPort")
    public AirScheduleSearchPortType getAirScheduleSearchPort() {
        return super.getPort(AirScheduleSearchPort, AirScheduleSearchPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirScheduleSearchPortType
     */
    @WebEndpoint(name = "AirScheduleSearchPort")
    public AirScheduleSearchPortType getAirScheduleSearchPort(WebServiceFeature... features) {
        return super.getPort(AirScheduleSearchPort, AirScheduleSearchPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AirRetrieveDocumentPortType
     */
    @WebEndpoint(name = "AirRetrieveDocumentBindingPort")
    public AirRetrieveDocumentPortType getAirRetrieveDocumentBindingPort() {
        return super.getPort(AirRetrieveDocumentBindingPort, AirRetrieveDocumentPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirRetrieveDocumentPortType
     */
    @WebEndpoint(name = "AirRetrieveDocumentBindingPort")
    public AirRetrieveDocumentPortType getAirRetrieveDocumentBindingPort(WebServiceFeature... features) {
        return super.getPort(AirRetrieveDocumentBindingPort, AirRetrieveDocumentPortType.class, features);
    }
    /**
     *
     * @return
     *     returns FlightTimeTablePortType
     */
    @WebEndpoint(name = "FlightTimeTablePort")
    public FlightTimeTablePortType getFlightTimeTablePort() {
        return super.getPort(FlightTimeTablePort, FlightTimeTablePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FlightTimeTablePortType
     */
    @WebEndpoint(name = "FlightTimeTablePort")
    public FlightTimeTablePortType getFlightTimeTablePort(WebServiceFeature... features) {
        return super.getPort(FlightTimeTablePort, FlightTimeTablePortType.class, features);
    }
    /**
     *
     * @return
     *     returns AirMerchandisingOfferAvailabilityPortType
     */
    @WebEndpoint(name = "AirMerchandisingOfferAvailabilityPort")
    public AirMerchandisingOfferAvailabilityPortType getAirMerchandisingOfferAvailabilityPort() {
        return super.getPort(AirMerchandisingOfferAvailabilityPort, AirMerchandisingOfferAvailabilityPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirMerchandisingOfferAvailabilityPortType
     */
    @WebEndpoint(name = "AirMerchandisingOfferAvailabilityPort")
    public AirMerchandisingOfferAvailabilityPortType getAirMerchandisingOfferAvailabilityPort(WebServiceFeature... features) {
        return super.getPort(AirMerchandisingOfferAvailabilityPort, AirMerchandisingOfferAvailabilityPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AirLowFareSearchAsynchPortType
     */
    @WebEndpoint(name = "AirLowFareSearchAsynchPort")
    public AirLowFareSearchAsynchPortType getAirLowFareSearchAsynchPort() {
        return super.getPort(AirLowFareSearchAsynchPort, AirLowFareSearchAsynchPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirLowFareSearchAsynchPortType
     */
    @WebEndpoint(name = "AirLowFareSearchAsynchPort")
    public AirLowFareSearchAsynchPortType getAirLowFareSearchAsynchPort(WebServiceFeature... features) {
        return super.getPort(AirLowFareSearchAsynchPort, AirLowFareSearchAsynchPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AirUpsellSearchPortType
     */
    @WebEndpoint(name = "AirUpsellSearchPort")
    public AirUpsellSearchPortType getAirUpsellSearchPort() {
        return super.getPort(AirUpsellSearchPort, AirUpsellSearchPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirUpsellSearchPortType
     */
    @WebEndpoint(name = "AirUpsellSearchPort")
    public AirUpsellSearchPortType getAirUpsellSearchPort(WebServiceFeature... features) {
        return super.getPort(AirUpsellSearchPort, AirUpsellSearchPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AirCreateReservationPortType
     */
    @WebEndpoint(name = "AirCreateReservationPort")
    public AirCreateReservationPortType getAirCreateReservationPort() {
        return super.getPort(AirCreateReservationPort, AirCreateReservationPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirCreateReservationPortType
     */
    @WebEndpoint(name = "AirCreateReservationPort")
    public AirCreateReservationPortType getAirCreateReservationPort(WebServiceFeature... features) {
        return super.getPort(AirCreateReservationPort, AirCreateReservationPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AirCancelPortType
     */
    @WebEndpoint(name = "AirCancelPort")
    public AirCancelPortType getAirCancelPort() {
        return super.getPort(AirCancelPort, AirCancelPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirCancelPortType
     */
    @WebEndpoint(name = "AirCancelPort")
    public AirCancelPortType getAirCancelPort(WebServiceFeature... features) {
        return super.getPort(AirCancelPort, AirCancelPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AirAvailabilitySearchPortType
     */
    @WebEndpoint(name = "AirAvailabilitySearchPort")
    public AirAvailabilitySearchPortType getAirAvailabilitySearchPort() {
        return super.getPort(AirAvailabilitySearchPort, AirAvailabilitySearchPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirAvailabilitySearchPortType
     */
    @WebEndpoint(name = "AirAvailabilitySearchPort")
    public AirAvailabilitySearchPortType getAirAvailabilitySearchPort(WebServiceFeature... features) {
        return super.getPort(AirAvailabilitySearchPort, AirAvailabilitySearchPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AirExchangeQuotePortType
     */
    @WebEndpoint(name = "AirExchangeQuotePort")
    public AirExchangeQuotePortType getAirExchangeQuotePort() {
        return super.getPort(AirExchangeQuotePort, AirExchangeQuotePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirExchangeQuotePortType
     */
    @WebEndpoint(name = "AirExchangeQuotePort")
    public AirExchangeQuotePortType getAirExchangeQuotePort(WebServiceFeature... features) {
        return super.getPort(AirExchangeQuotePort, AirExchangeQuotePortType.class, features);
    }
    /**
     *
     * @return
     *     returns AirRefundQuotePortType
     */
    @WebEndpoint(name = "AirRefundQuotePort")
    public AirRefundQuotePortType getAirRefundQuotePort() {
        return super.getPort(AirRefundQuotePort, AirRefundQuotePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirRefundQuotePortType
     */
    @WebEndpoint(name = "AirRefundQuotePort")
    public AirRefundQuotePortType getAirRefundQuotePort(WebServiceFeature... features) {
        return super.getPort(AirRefundQuotePort, AirRefundQuotePortType.class, features);
    }
    /**
     *
     * @return
     *     returns AirTicketingPortType
     */
    @WebEndpoint(name = "AirTicketingPort")
    public AirTicketingPortType getAirTicketingPort() {
        return super.getPort(AirTicketingPort, AirTicketingPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirTicketingPortType
     */
    @WebEndpoint(name = "AirTicketingPort")
    public AirTicketingPortType getAirTicketingPort(WebServiceFeature... features) {
        return super.getPort(AirTicketingPort, AirTicketingPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AirPrePayPortType
     */
    @WebEndpoint(name = "AirPrePayPort")
    public AirPrePayPortType getAirPrePayPort() {
        return super.getPort(AirPrePayPort, AirPrePayPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirPrePayPortType
     */
    @WebEndpoint(name = "AirPrePayPort")
    public AirPrePayPortType getAirPrePayPort(WebServiceFeature... features) {
        return super.getPort(AirPrePayPort, AirPrePayPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AirMerchandisingFulfillmentPortType
     */
    @WebEndpoint(name = "AirMerchandisingFulfillmentPort")
    public AirMerchandisingFulfillmentPortType getAirMerchandisingFulfillmentPort() {
        return super.getPort(AirMerchandisingFulfillmentPort, AirMerchandisingFulfillmentPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirMerchandisingFulfillmentPortType
     */
    @WebEndpoint(name = "AirMerchandisingFulfillmentPort")
    public AirMerchandisingFulfillmentPortType getAirMerchandisingFulfillmentPort(WebServiceFeature... features) {
        return super.getPort(AirMerchandisingFulfillmentPort, AirMerchandisingFulfillmentPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AirPricePortType
     */
    @WebEndpoint(name = "AirPricePort")
    public AirPricePortType getAirPricePort() {
        return super.getPort(AirPricePort, AirPricePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirPricePortType
     */
    @WebEndpoint(name = "AirPricePort")
    public AirPricePortType getAirPricePort(WebServiceFeature... features) {
        return super.getPort(AirPricePort, AirPricePortType.class, features);
    }
    /**
     *
     * @return
     *     returns AirExchangeTicketingPortType
     */
    @WebEndpoint(name = "AirExchangeTicketingPort")
    public AirExchangeTicketingPortType getAirExchangeTicketingPort() {
        return super.getPort(AirExchangeTicketingPort, AirExchangeTicketingPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirExchangeTicketingPortType
     */
    @WebEndpoint(name = "AirExchangeTicketingPort")
    public AirExchangeTicketingPortType getAirExchangeTicketingPort(WebServiceFeature... features) {
        return super.getPort(AirExchangeTicketingPort, AirExchangeTicketingPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AirRetrieveLowFareSearchPortType
     */
    @WebEndpoint(name = "AirRetrieveLowFareSearchPort")
    public AirRetrieveLowFareSearchPortType getAirRetrieveLowFareSearchPort() {
        return super.getPort(AirRetrieveLowFareSearchPort, AirRetrieveLowFareSearchPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirRetrieveLowFareSearchPortType
     */
    @WebEndpoint(name = "AirRetrieveLowFareSearchPort")
    public AirRetrieveLowFareSearchPortType getAirRetrieveLowFareSearchPort(WebServiceFeature... features) {
        return super.getPort(AirRetrieveLowFareSearchPort, AirRetrieveLowFareSearchPortType.class, features);
    }
    /**
     *
     * @return
     *     returns AirLowFareSearchPortType
     */
    @WebEndpoint(name = "AirLowFareSearchPort")
    public AirLowFareSearchPortType getAirLowFareSearchPort() {
        return super.getPort(AirLowFareSearchPort, AirLowFareSearchPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AirLowFareSearchPortType
     */
    @WebEndpoint(name = "AirLowFareSearchPort")
    public AirLowFareSearchPortType getAirLowFareSearchPort(WebServiceFeature... features) {
        return super.getPort(AirLowFareSearchPort, AirLowFareSearchPortType.class, features);
    }

}
